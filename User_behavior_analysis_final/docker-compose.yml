version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: kafka-zookeeper-1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092   # ✅ Dùng tên service trong Docker
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - default


  postgres:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_behavior
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql

  superset:
    image: apache/superset
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      SUPERSET_LOAD_EXAMPLES: "yes"
      SUPERSET_SECRET_KEY: "thisISaSECRETkey123"
      ADMIN_USERNAME: admin
      ADMIN_EMAIL: admin@superset.com
      ADMIN_PASSWORD: admin
    depends_on:
      - postgres

  flink-jobmanager:
    image: flink:1.17
    container_name: flink-jobmanager
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    depends_on:
      - kafka
    volumes:
      - ./flink/jars:/opt/flink/jars

  flink-taskmanager:
    image: flink:1.17
    container_name: flink-taskmanager
    command: taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    volumes:
      - ./flink/jars:/opt/flink/jars


  flink-job-submit:
    build:
      context: ./flink
    container_name: flink-job-submit
    depends_on:
      - kafka
      - postgres
      - flink-jobmanager
    volumes:
      - ./flink/jars:/opt/flink/jars  
    networks:
      - default




  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-init
    depends_on:
      - kafka
    entrypoint: [ "bash", "-c", "/init/topics-init.sh" ]
    volumes:
      - ./kafka/topics-init.sh:/init/topics-init.sh

  log_generator:
    build:
      context: ./log_generator
    container_name: log_generator
    depends_on:
      - kafka
    networks:
      - default

  log_consumer:
    build:
      context: ./postgreSQL/log_consumer
    container_name: log_consumer
    depends_on:
      - kafka
      - postgres
    networks:
      - default



volumes:
  pgdata: {}

networks:
  default:


