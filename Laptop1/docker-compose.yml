version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: kafka_zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: unless-stopped

  flink-jobmanager:
    build:
      context: ./Flink
    image: flink-custom:1.17
    container_name: flink_jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    volumes:
      - ./Flink/jars:/opt/flink/usrlib
      - ./Flink/flink_job.py:/opt/flink/flink_job.py
      - ./Flink/conf/pyflink-conf.yaml:/opt/flink/conf/pyflink-conf.yaml

  flink-taskmanager:
    build:
      context: ./Flink
    image: flink-custom:1.17
    container_name: flink_taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    volumes:
      - ./Flink/jars:/opt/flink/usrlib
      - ./Flink/flink_job.py:/opt/flink/flink_job.py
      - ./Flink/conf/pyflink-conf.yaml:/opt/flink/conf/pyflink-conf.yaml

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Truongdz2004@
      POSTGRES_DB: laptopdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
